C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\bin\main.obj
COMPILER INVOKED BY: C:\Program Files\Keil4\C51\BIN\C51.EXE ..\src\main\main.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(..\
                    -lst\main.lst) OBJECT(..\bin\main.obj)

line level    source

   1          #include "../drv/STC8.H"
   2          #include "../app/ParaDefine.H"
   3          
   4          #include "intrins.h"
   5          #include "../drv/19296p1.c"
   6          #include "../drv/uartDrv.h"
   7          #include "task.h"
   8          
   9          #define  time_ms 400 
  10          
  11          //sbit LED1 = P3^6;
  12          //sbit LED2 = P3^5;
  13          //sbit Key1 = P3^2;
  14          //sbit Key2 = P3^3;
  15          
  16          typedef struct{
  17                  uint I_current;
  18                  uchar I_Digit1;
  19                  uchar I_Digit2;
  20                  uchar I_Digit3;
  21                  uchar I_Digit4;
  22                  uchar I_Digit5;
  23          //      uchar I_DotPosition;
  24                          
  25                  uint F_frequency;
  26                  uchar F_Digit1;
  27                  uchar F_Digit2;
  28                  uchar F_Digit3;
  29                  uchar F_Digit4;
  30                  uchar F_Digit5;
  31          //      uchar F_DotPosition;
  32                  
  33                  uint E_encoder;
  34                  uchar E_Digit1;
  35                  uchar E_Digit2;
  36                  uchar E_Digit3;
  37                  uchar E_Digit4;
  38                  uchar E_Digit5;
  39                  
  40                  uint RT_runtime;
  41                  uchar RT_Digit1;
  42                  uchar RT_Digit2;
  43                  uchar RT_Digit3;
  44                  uchar RT_Digit4;
  45                  uchar RT_Digit5;
  46                  
  47                  uchar Motor_Direction;
  48                  uchar Motor_Direction_Set;
  49                  
  50                  uchar Up_Limit_Set;
  51                  uchar Low_Limit_Set;
  52          }Machine_Parameters_Def;
  53          
  54          Machine_Parameters_Def Motor_Parameter;
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 2   

  55          uchar char_num[16];
  56          uchar count=0;
  57          uint Timer4_Count;
  58          
  59          
  60          void Display_Full_Line_Up(uchar x);
  61          void Display_Full_Line_Down(uchar x);
  62          
  63          void Disp_Page_00_00(void);
  64          void Disp_Page_00_01(void);
  65          void Disp_Page_00_02(void);
  66          void Disp_Page_00_03(void);
  67          
  68          void Disp_Page_01_00(void);
  69          void Disp_Page_01_01(void);
  70          void Disp_Page_01_02(void);
  71          void Disp_Page_01_03(void);
  72          
  73          void Display_Page00_00_ParaArea(void);
  74          void Display_Page00_01_ParaArea(void);
  75          void Display_Page00_03_ParaArea(void);
  76          
  77          void Display_Encoder_Number(void);
  78          void Display_Encoder_Number1(void);
  79          void Display_I_current(void);
  80          void Display_F_frequency(void);
  81          void Display_RunTime(void);
  82          
  83          void BUTTON1_Display1_FanXiang(void);
  84          void BUTTON1_Display1_ZhengXiang(void);
  85          void BUTTON1_Display2_Fanhui(void);
  86          
  87          
  88          void BUTTON2_Display1_QueRen(void);
  89          void BUTTON2_Display2_Fanhui(void);
  90          void BUTTON2_Display3_Caidan(void);
  91          
  92          
  93          void Display_Page00_00_MotorDirt(void);
  94          void Display_Page00_01_LLStudy(void);
  95          void Display_Page00_03_ZDKJ(void);
  96          
  97          
  98          void Motor_Direction_Update(void);
  99          
 100          void Number_Lookup_Table(uchar number);
 101          void Display_Full_Vertical_Line(uchar line);
 102          
 103          
 104          //ï¿½ï¿½ï¿½Ü£ï¿½ï¿½ï¿½Ê±ï¿½Ó³ï¿½ï¿½ï¿½  ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½time  Îªï¿½ï¿½ï¿½ï¿½msï¿½ï¿½
 105          void delay_ms(unsigned int time)
 106          {
 107   1               unsigned int  i;
 108   1               unsigned int  j;
 109   1               for(i=0;i<time;i++)
 110   1                      for(j=0;j<1668;j++);
 111   1      }
 112          
 113          //ï¿½ï¿½ï¿½Ü£ï¿½IOï¿½ï¿½Ê¼ï¿½ï¿½  ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 114          void IO_INIT()
 115          {
 116   1              //ï¿½ï¿½×¢ï¿½ï¿½I/Oï¿½Ú¸ï¿½ï¿½Ö²ï¿½Í¬ï¿½Ä¹ï¿½ï¿½ï¿½Ä£Ê½ï¿½ï¿½ï¿½ï¿½ï¿½Ã½ï¿½ï¿½Ü¼ï¿½ STC15 Ïµï¿½ï¿½ï¿½Äµï¿
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 3   

             -½ï¿½ï¿½400Ò³        
 117   1      //      P3M0 = 0XFF;
 118   1      //      P3M1 = 0X00;                    //P3ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½(Ç¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½É´ï¿½20mA)
 119   1      //  P3 = 0X00;                                                                          //ï¿½Ïµï¿½ï¿½IOï¿½ï¿½Ê¼ï¿½ï¿½Îªï¿½Íµï¿½Æ½       
 120   1      //      P3M0 = 0x10;    //0001 0000
 121   1      //      P3M1 = 0x00;    //0000 0000
 122   1      //      P3PU |= 0x08;   //0000 1000
 123   1      }
 124          
 125          void Display_Full_Line_Up(uchar x)
 126          {
 127   1              uchar i;
 128   1      //      if(x==2)
 129   1      //              {
 130   1      //                      for(i=1;i<15;i++)
 131   1      //                              {display_8x8((i-1)*8+1,x,Char0808_Up);}
 132   1      //                      display_8x8(185,x,Char0808_Up);
 133   1      //              }
 134   1      //              else
 135   1      //                      {
 136   1                                      for(i=1;i<25;i++)
 137   1                                      {display_8x8((i-1)*8+1,x,Char0808_Up);}
 138   1      //                      }
 139   1      }
 140          
 141          void Display_Full_Line_Down(uchar x)
 142          {
 143   1              uchar i;
 144   1              if(x==12)
 145   1                      {
 146   2                              //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½
 147   2                              display_8x8(1,12,Char0808_Down);
 148   2                              for(i=2;i<6;i++)
 149   2                                      {display_8x8((i-1)*8+1,12,Char0808_UpDown);}
 150   2                              for(i=6;i<20;i++)
 151   2                                      {display_8x8((i-1)*8+1,12,Char0808_Down);}                      
 152   2                              for(i=20;i<24;i++)
 153   2                                      {display_8x8((i-1)*8+1,12,Char0808_UpDown);}
 154   2                              display_8x8(185,12,Char0808_Down);
 155   2                      }
 156   1                      else
 157   1                              {
 158   2                                      for(i=1;i<25;i++)
 159   2                                      {display_8x8((i-1)*8+1,x,Char0808_Down);}
 160   2                              }
 161   1      }
 162          
 163          void Display_Full_Vertical_Line(uchar line)
 164          {
 165   1              uchar i;
 166   1              for(i=1;i<13;i++)
 167   1                      {display_8x1(line,i,0xFF);}
 168   1      }
 169          
 170          void BUTTON1_Display1_FanXiang(void)            //ï¿½ï¿½ï¿½ï¿½
 171          {
 172   1              uchar i;
 173   1              for(i=2;i<6;i++)
 174   1              {display_8x8((i-1)*8+1,9,Char0808_Down);}
 175   1              Hanzi_Disp_16x16(9, 10, Hanzi_1616_XST_Fan1, 0x04);     //0000 0100
 176   1              Hanzi_Disp_16x16(25, 10, Hanzi_1616_XST_Xiang, 0x08); //00001000
 177   1              for(i=2;i<6;i++)
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 4   

 178   1              {display_8x8((i-1)*8+1, 12,Char0808_Up);}
 179   1              Display_Full_Line_Down(12); 
 180   1              Display_Full_Vertical_Line(1);
 181   1              Display_Full_Vertical_Line(192); 
 182   1      }
 183          
 184          void BUTTON1_Display1_ZhengXiang(void)          //ï¿½ï¿½ï¿½ï¿½
 185          {
 186   1              uchar i;
 187   1              for(i=2;i<6;i++)
 188   1              {display_8x8((i-1)*8+1,9,Char0808_Down);}
 189   1              Hanzi_Disp_16x16(9, 10, Hanzi_1616_XST_Zheng, 0x04);    //0000 0100
 190   1              Hanzi_Disp_16x16(25, 10, Hanzi_1616_XST_Xiang, 0x08); //00001000
 191   1              for(i=2;i<6;i++)
 192   1              {display_8x8((i-1)*8+1, 12,Char0808_Up);}
 193   1              Display_Full_Line_Down(12);
 194   1              Display_Full_Vertical_Line(1);
 195   1              Display_Full_Vertical_Line(192);
 196   1      }
 197          
 198          void BUTTON1_Display2_Fanhui(void)              //ï¿½ï¿½ï¿½ï¿½
 199          {
 200   1              uchar i;
 201   1              for(i=2;i<6;i++)
 202   1              {display_8x8((i-1)*8+1,9,Char0808_Down);}
 203   1              Hanzi_Disp_16x16(9, 10, Hanzi_1616_XST_Fan, 0x04);      //0000 0100
 204   1              Hanzi_Disp_16x16(25, 10, Hanzi_1616_XST_Hui, 0x08); //00001000
 205   1              for(i=2;i<6;i++)
 206   1              {display_8x8((i-1)*8+1, 12,Char0808_Up);}
 207   1              Display_Full_Line_Down(12);
 208   1              Display_Full_Vertical_Line(1);
 209   1              Display_Full_Vertical_Line(192);
 210   1      }
 211          
 212          void BUTTON1_Display3_Caidan(void)              //ï¿½Ëµï¿½
 213          {
 214   1              uchar i;
 215   1              for(i=2;i<6;i++)
 216   1              {display_8x8((i-1)*8+1,9,Char0808_Down);}
 217   1              Hanzi_Disp_16x16(9, 10, Hanzi_1616_XST_Cai, 0x04);      //0000 0100
 218   1              Hanzi_Disp_16x16(25, 10, Hanzi_1616_XST_Dan, 0x08); //00001000
 219   1              for(i=2;i<6;i++)
 220   1              {display_8x8((i-1)*8+1, 12,Char0808_Up);}
 221   1              Display_Full_Line_Down(12);
 222   1              Display_Full_Vertical_Line(1);
 223   1              Display_Full_Vertical_Line(192);
 224   1      }
 225          
 226          void BUTTON2_Display1_QueRen(void)              //È·ï¿½ï¿½
 227          {
 228   1              uchar i;
 229   1              for(i=20;i<24;i++)
 230   1              {display_8x8((i-1)*8+1,9,Char0808_Down);}
 231   1              Hanzi_Disp_16x16(153, 10, Hanzi_1616_XST_Que, 0x04);    //0000 0100
 232   1              Hanzi_Disp_16x16(169, 10, Hanzi_1616_XST_Ren, 0x08); //00001000
 233   1              for(i=20;i<24;i++)
 234   1              {display_8x8((i-1)*8+1, 12,Char0808_Up);}
 235   1              Display_Full_Line_Down(12);
 236   1              Display_Full_Vertical_Line(1);
 237   1              Display_Full_Vertical_Line(192);
 238   1      }
 239          
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 5   

 240          void BUTTON2_Display2_Fanhui(void)              //ï¿½ï¿½ï¿½ï¿½
 241          {
 242   1              uchar i;
 243   1              for(i=20;i<24;i++)
 244   1              {display_8x8((i-1)*8+1,9,Char0808_Down);}
 245   1              Hanzi_Disp_16x16(153, 10, Hanzi_1616_XST_Fan, 0x04);    //0000 0100
 246   1              Hanzi_Disp_16x16(169, 10, Hanzi_1616_XST_Hui, 0x08); //00001000
 247   1              for(i=20;i<24;i++)
 248   1              {display_8x8((i-1)*8+1, 12,Char0808_Up);}
 249   1              Display_Full_Line_Down(12);
 250   1              Display_Full_Vertical_Line(1);
 251   1              Display_Full_Vertical_Line(192);
 252   1      }
 253          
 254          void BUTTON2_Display3_Caidan(void)              //ï¿½Ëµï¿½
 255          {
 256   1              uchar i;
 257   1              for(i=20;i<24;i++)
 258   1              {display_8x8((i-1)*8+1,9,Char0808_Down);}
 259   1              Hanzi_Disp_16x16(153, 10, Hanzi_1616_XST_Cai, 0x04);    //0000 0100
 260   1              Hanzi_Disp_16x16(169, 10, Hanzi_1616_XST_Dan, 0x08); //00001000
 261   1              for(i=20;i<24;i++)
 262   1              {display_8x8((i-1)*8+1, 12,Char0808_Up);}
 263   1              Display_Full_Line_Down(12);
 264   1              Display_Full_Vertical_Line(1);
 265   1              Display_Full_Vertical_Line(192);
 266   1      }
 267          
 268          void Number_Lookup_Table(uchar number)
 269          {
 270   1                      uchar i;
 271   1                      for(i=0;i<16;i++)
 272   1                      {char_num[i] = char_number_table[number*16+i];}
 273   1      }
 274          
 275          void Display_Encoder_Number(void)
 276          {
 277   1              uint encoder;
 278   1              encoder = Motor_Parameter.E_encoder;
 279   1              
 280   1              if(encoder>10000)                       //ï¿½ï¿½ï¿½Î»
 281   1                      {
 282   2                              Motor_Parameter.E_Digit1 = encoder/10000;
 283   2                              encoder %= 10000;       
 284   2                      }
 285   1                      else {Motor_Parameter.E_Digit1 = 0;}
 286   1                      
 287   1              if(encoder>1000)                //ï¿½ï¿½2Î»
 288   1                      {
 289   2                              Motor_Parameter.E_Digit2 = encoder/1000;
 290   2                              encoder %= 1000;        
 291   2                      }
 292   1                      else {Motor_Parameter.E_Digit2 = 0;}
 293   1                      
 294   1              if(encoder>100)         //ï¿½ï¿½3Î»
 295   1                      {
 296   2                              Motor_Parameter.E_Digit3 = encoder/100;
 297   2                              encoder %= 100; 
 298   2                      }
 299   1                      else {Motor_Parameter.E_Digit3 = 0;}
 300   1                      
 301   1              if(encoder>10)          //ï¿½ï¿½4Î»
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 6   

 302   1                      {
 303   2                              Motor_Parameter.E_Digit4 = encoder/10;
 304   2                              encoder %= 10;  
 305   2                      }
 306   1                      else {Motor_Parameter.E_Digit4 = 0;}
 307   1                              
 308   1              Motor_Parameter.E_Digit5 = encoder;             //ï¿½ï¿½5Î»
 309   1              
 310   1              Number_Lookup_Table(Motor_Parameter.E_Digit1);
 311   1              CHAR_Display_16x8(57, 2,char_num, 0); 
 312   1      
 313   1              Number_Lookup_Table(Motor_Parameter.E_Digit2);
 314   1              CHAR_Display_16x8(65, 2,char_num, 0); 
 315   1      
 316   1              Number_Lookup_Table(Motor_Parameter.E_Digit3);
 317   1              CHAR_Display_16x8(73, 2,char_num, 0); 
 318   1      
 319   1              Number_Lookup_Table(Motor_Parameter.E_Digit4);
 320   1              CHAR_Display_16x8(81, 2,char_num, 0); 
 321   1      
 322   1              Number_Lookup_Table(Motor_Parameter.E_Digit5);
 323   1              CHAR_Display_16x8(89, 2,char_num, 0); 
 324   1      }
 325          
 326          void Display_Encoder_Number1(void)
 327          {
 328   1              uint encoder;
 329   1              encoder = Motor_Parameter.E_encoder;
 330   1              
 331   1              if(encoder>10000)                       //ï¿½ï¿½ï¿½Î»
 332   1                      {
 333   2                              Motor_Parameter.E_Digit1 = encoder/10000;
 334   2                              encoder %= 10000;       
 335   2                      }
 336   1                      else {Motor_Parameter.E_Digit1 = 0;}
 337   1                      
 338   1              if(encoder>1000)                //ï¿½ï¿½2Î»
 339   1                      {
 340   2                              Motor_Parameter.E_Digit2 = encoder/1000;
 341   2                              encoder %= 1000;        
 342   2                      }
 343   1                      else {Motor_Parameter.E_Digit2 = 0;}
 344   1                      
 345   1              if(encoder>100)         //ï¿½ï¿½3Î»
 346   1                      {
 347   2                              Motor_Parameter.E_Digit3 = encoder/100;
 348   2                              encoder %= 100; 
 349   2                      }
 350   1                      else {Motor_Parameter.E_Digit3 = 0;}
 351   1                      
 352   1              if(encoder>10)          //ï¿½ï¿½4Î»
 353   1                      {
 354   2                              Motor_Parameter.E_Digit4 = encoder/10;
 355   2                              encoder %= 10;  
 356   2                      }
 357   1                      else {Motor_Parameter.E_Digit4 = 0;}
 358   1                              
 359   1              Motor_Parameter.E_Digit5 = encoder;             //ï¿½ï¿½5Î»
 360   1              
 361   1              Number_Lookup_Table(Motor_Parameter.E_Digit1);
 362   1              CHAR_Display_16x8(57, 1,char_num, 1); 
 363   1      
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 7   

 364   1              Number_Lookup_Table(Motor_Parameter.E_Digit2);
 365   1              CHAR_Display_16x8(65, 1,char_num, 1); 
 366   1      
 367   1              Number_Lookup_Table(Motor_Parameter.E_Digit3);
 368   1              CHAR_Display_16x8(73, 1,char_num, 1); 
 369   1      
 370   1              Number_Lookup_Table(Motor_Parameter.E_Digit4);
 371   1              CHAR_Display_16x8(81, 1,char_num, 1); 
 372   1      
 373   1              Number_Lookup_Table(Motor_Parameter.E_Digit5);
 374   1              CHAR_Display_16x8(89, 1,char_num, 1); 
 375   1      }
 376          
 377          
 378          void Display_RunTime(void)
 379          {
 380   1              uint runtime;
 381   1              runtime = Motor_Parameter.RT_runtime;
 382   1              
 383   1              if(runtime>10000)                       //ï¿½ï¿½ï¿½Î»
 384   1                      {
 385   2                              Motor_Parameter.RT_Digit1 = runtime/10000;
 386   2                              runtime %= 10000;       
 387   2                      }
 388   1                      else {Motor_Parameter.RT_Digit1 = 0;}
 389   1                      
 390   1              if(runtime>1000)                //ï¿½ï¿½2Î»
 391   1                      {
 392   2                              Motor_Parameter.RT_Digit2 = runtime/1000;
 393   2                              runtime %= 1000;        
 394   2                      }
 395   1                      else {Motor_Parameter.RT_Digit2 = 0;}
 396   1                      
 397   1              if(runtime>100)         //ï¿½ï¿½3Î»
 398   1                      {
 399   2                              Motor_Parameter.RT_Digit3 = runtime/100;
 400   2                              runtime %= 100; 
 401   2                      }
 402   1                      else {Motor_Parameter.RT_Digit3 = 0;}
 403   1                      
 404   1              if(runtime>10)          //ï¿½ï¿½4Î»
 405   1                      {
 406   2                              Motor_Parameter.RT_Digit4 = runtime/10;
 407   2                              runtime %= 10;  
 408   2                      }
 409   1                      else {Motor_Parameter.RT_Digit4 = 0;}
 410   1                              
 411   1              Motor_Parameter.RT_Digit5 = runtime;            //ï¿½ï¿½5Î»
 412   1              
 413   1              Number_Lookup_Table(Motor_Parameter.RT_Digit1);
 414   1              CHAR_Display_16x8(57, 3,char_num, 0); 
 415   1      
 416   1              Number_Lookup_Table(Motor_Parameter.RT_Digit2);
 417   1              CHAR_Display_16x8(65, 3,char_num, 0); 
 418   1      
 419   1              Number_Lookup_Table(Motor_Parameter.RT_Digit3);
 420   1              CHAR_Display_16x8(73, 3,char_num, 0); 
 421   1      
 422   1              Number_Lookup_Table(Motor_Parameter.RT_Digit4);
 423   1              CHAR_Display_16x8(81, 3,char_num, 0); 
 424   1      
 425   1              Number_Lookup_Table(Motor_Parameter.RT_Digit5);
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 8   

 426   1              CHAR_Display_16x8(89, 3,char_num, 0);           
 427   1      }
 428          
 429          void Display_I_current(void)
 430          {
 431   1              uint current_data;
 432   1              current_data = Motor_Parameter.I_current;
 433   1      
 434   1              if(current_data>10000)                  //ï¿½ï¿½ï¿½Î»
 435   1                      {
 436   2                              Motor_Parameter.I_Digit1 = current_data/10000;
 437   2                              current_data %= 10000;  
 438   2                      }
 439   1                      else {Motor_Parameter.I_Digit1 = 0;}
 440   1                      
 441   1              if(current_data>1000)           //ï¿½ï¿½2Î»
 442   1                      {
 443   2                              Motor_Parameter.I_Digit2 = current_data/1000;
 444   2                              current_data %= 1000;   
 445   2                      }
 446   1                      else {Motor_Parameter.I_Digit2 = 0;}
 447   1                      
 448   1              if(current_data>100)            //ï¿½ï¿½3Î»
 449   1                      {
 450   2                              Motor_Parameter.I_Digit3 = current_data/100;
 451   2                              current_data %= 100;    
 452   2                      }
 453   1                      else {Motor_Parameter.I_Digit3 = 0;}
 454   1                      
 455   1              if(current_data>10)             //ï¿½ï¿½4Î»
 456   1                      {
 457   2                              Motor_Parameter.I_Digit4 = current_data/10;
 458   2                              current_data %= 10;     
 459   2                      }
 460   1                      else {Motor_Parameter.I_Digit4 = 0;}
 461   1                              
 462   1              Motor_Parameter.I_Digit5 = current_data;                //ï¿½ï¿½5Î»
 463   1              
 464   1              Number_Lookup_Table(Motor_Parameter.I_Digit1);
 465   1              CHAR_Display_16x8(129, 1,char_num, 1);                  //ï¿½ï¿½ï¿½Ïºï¿½
 466   1      
 467   1              Number_Lookup_Table(Motor_Parameter.I_Digit2);
 468   1              CHAR_Display_16x8(137, 1,char_num, 1);                  //ï¿½ï¿½ï¿½Ïºï¿½ 
 469   1      
 470   1              Number_Lookup_Table(Motor_Parameter.I_Digit3);
 471   1              CHAR_Display_16x8(145, 1,char_num, 1);                  //ï¿½ï¿½ï¿½Ïºï¿½ 
 472   1      
 473   1              Number_Lookup_Table(Motor_Parameter.I_Digit4);
 474   1              CHAR_Display_16x8(161, 1,char_num, 1);                  //ï¿½ï¿½ï¿½Ïºï¿½ 
 475   1      
 476   1              Number_Lookup_Table(Motor_Parameter.I_Digit5);
 477   1              CHAR_Display_16x8(169, 1,char_num, 1);                  //ï¿½ï¿½ï¿½Ïºï¿½ 
 478   1      }
 479          
 480          void Display_F_frequency(void)
 481          {
 482   1              uint frequency_data;
 483   1              frequency_data = Motor_Parameter.F_frequency;
 484   1      
 485   1              if(frequency_data>10000)                        //ï¿½ï¿½ï¿½Î»
 486   1                      {
 487   2                              Motor_Parameter.F_Digit1 = frequency_data/10000;
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 9   

 488   2                              frequency_data %= 10000;        
 489   2                      }
 490   1                      else {Motor_Parameter.F_Digit1 = 0;}
 491   1                      
 492   1              if(frequency_data>1000)         //ï¿½ï¿½2Î»
 493   1                      {
 494   2                              Motor_Parameter.F_Digit2 = frequency_data/1000;
 495   2                              frequency_data %= 1000; 
 496   2                      }
 497   1                      else {Motor_Parameter.F_Digit2 = 0;}
 498   1                      
 499   1              if(frequency_data>100)          //ï¿½ï¿½3Î»
 500   1                      {
 501   2                              Motor_Parameter.F_Digit3 = frequency_data/100;
 502   2                              frequency_data %= 100;  
 503   2                      }
 504   1                      else {Motor_Parameter.F_Digit3 = 0;}
 505   1                      
 506   1              if(frequency_data>10)           //ï¿½ï¿½4Î»
 507   1                      {
 508   2                              Motor_Parameter.F_Digit4 = frequency_data/10;
 509   2                              frequency_data %= 10;   
 510   2                      }
 511   1                      else {Motor_Parameter.F_Digit4 = 0;}
 512   1                              
 513   1              Motor_Parameter.F_Digit5 = frequency_data;              //ï¿½ï¿½5Î»
 514   1              
 515   1              Number_Lookup_Table(Motor_Parameter.F_Digit1);
 516   1              CHAR_Display_16x8(129, 3,char_num, 0);                  //ï¿½ï¿½ï¿½Ïºï¿½
 517   1      
 518   1              Number_Lookup_Table(Motor_Parameter.F_Digit2);
 519   1              CHAR_Display_16x8(137, 3,char_num, 0);                  //ï¿½ï¿½ï¿½Ïºï¿½ 
 520   1      
 521   1              Number_Lookup_Table(Motor_Parameter.F_Digit3);
 522   1              CHAR_Display_16x8(145, 3,char_num, 0);                  //ï¿½ï¿½ï¿½Ïºï¿½ 
 523   1      
 524   1              Number_Lookup_Table(Motor_Parameter.F_Digit4);
 525   1              CHAR_Display_16x8(161, 3,char_num, 0);                  //ï¿½ï¿½ï¿½Ïºï¿½ 
 526   1      
 527   1              Number_Lookup_Table(Motor_Parameter.F_Digit5);
 528   1              CHAR_Display_16x8(169, 3,char_num, 0);                  //ï¿½ï¿½ï¿½Ïºï¿½ 
 529   1      }
 530          
 531          void Motor_Direction_Update(void)
 532          {
 533   1              if(Motor_Parameter.Motor_Direction == 1)
 534   1                      {BUTTON1_Display1_ZhengXiang(); }
 535   1                      else
 536   1                              {       BUTTON1_Display1_FanXiang();}
 537   1      }
 538          
 539          void Display_Page00_00_ParaArea(void)           //Page00_00ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 540          {
 541   1              Hanzi_Disp_16x16(1, 2, Hanzi_1616_XST_Bian, 0x04);      //0000 0100
 542   1              Hanzi_Disp_16x16(17, 2, Hanzi_1616_XST_Ma, 0);  //0000 0100
 543   1              Hanzi_Disp_16x16(33, 2, Hanzi_1616_XST_Qi, 0);  //0000 0100
 544   1              CHAR_Display_16x8(49,2,char_cMaohao, 0);
 545   1              Display_Encoder_Number();
 546   1      }
 547          
 548          void Display_Page00_01_ParaArea(void)           //Page00_01ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 549          {
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 10  

 550   1              Display_Page00_00_ParaArea();
 551   1              CHAR_Display_16x8(113,1,char_capital_I, 1);
 552   1              CHAR_Display_16x8(121,1,char_cMaohao, 1);
 553   1              CHAR_Display_16x8(153,1,char_cDot, 1);
 554   1              CHAR_Display_16x8(113,3,char_capital_F, 0);
 555   1              CHAR_Display_16x8(121,3,char_cMaohao, 0);
 556   1              CHAR_Display_16x8(153,3,char_cDot, 0);
 557   1              CHAR_Display_16x8(177,1,char_capital_A, 1);
 558   1              CHAR_Display_16x8(177,3,char_capital_H, 0);
 559   1              CHAR_Display_16x8(185,3,char_z, 0);
 560   1              Display_I_current();
 561   1              Display_F_frequency();
 562   1      }
 563          
 564          void Display_Page00_03_ParaArea(void)   //ï¿½ï¿½Ê¾ï¿½Ì¶ï¿½ï¿½ï¿½Ï¢
 565          {
 566   1              Hanzi_Disp_16x16(1, 1, Hanzi_1616_XST_Bian, 1); 
 567   1              Hanzi_Disp_16x16(17, 1, Hanzi_1616_XST_Ma, 1);  
 568   1              Hanzi_Disp_16x16(33, 1, Hanzi_1616_XST_Qi, 1);  
 569   1              CHAR_Display_16x8(49,1,char_cMaohao, 1);
 570   1              Hanzi_Disp_16x16(1, 3, Hanzi_1616_XST_Yun, 0);  
 571   1              Hanzi_Disp_16x16(17, 3, Hanzi_1616_XST_Xing, 0);        
 572   1              Hanzi_Disp_16x16(33, 3, Hanzi_1616_XST_Shu, 0); 
 573   1              CHAR_Display_16x8(49,3,char_cMaohao, 0);
 574   1              
 575   1              CHAR_Display_16x8(113,1,char_capital_I, 1);
 576   1              CHAR_Display_16x8(121,1,char_cMaohao, 1);
 577   1              CHAR_Display_16x8(153,1,char_cDot, 1);
 578   1              CHAR_Display_16x8(177,1,char_capital_A, 1);
 579   1              CHAR_Display_16x8(113,3,char_capital_F, 0);
 580   1              CHAR_Display_16x8(121,3,char_cMaohao, 0);
 581   1              CHAR_Display_16x8(153,3,char_cDot, 0);
 582   1              CHAR_Display_16x8(177,3,char_capital_H, 0);
 583   1              CHAR_Display_16x8(185,3,char_z, 0);
 584   1              
 585   1              Display_Encoder_Number1();
 586   1              Display_RunTime();
 587   1              Display_I_current();
 588   1              Display_F_frequency();
 589   1      }
 590          
 591          void Display_Page00_00_MotorDirt(void)  //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 592          {
 593   1              disp_24x24(49,6,Hanzi_2424_HWZS_Dian);
 594   1              disp_24x24(73,6,Hanzi_2424_HWZS_Ji);
 595   1              disp_24x24(97,6,Hanzi_2424_HWZS_Fang);
 596   1              disp_24x24(121,6,Hanzi_2424_HWZS_Xiang);
 597   1      //      disp_96x24(49,6,Hanzi_9624_HWZS_DJFX);
 598   1      }
 599          
 600          void Display_Page00_01_LLStudy(void)            //ï¿½ï¿½ï¿½ï¿½Î»Ñ§Ï°
 601          {
 602   1              disp_24x24(33,6,Hanzi_2424_HWZS_Xia);
 603   1              disp_24x24(57,6,Hanzi_2424_HWZS_Xian);
 604   1              disp_24x24(81,6,Hanzi_2424_HWZS_Wei);
 605   1              disp_24x24(105,6,Hanzi_2424_HWZS_Xue);
 606   1              disp_24x24(129,6,Hanzi_2424_HWZS_Xi);
 607   1      //      disp_96x24(49,6,Hanzi_9624_HWZS_DJFX);
 608   1      }
 609          
 610          void Display_Page00_01_ULStudy(void)            //ï¿½ï¿½ï¿½ï¿½Î»Ñ§Ï°
 611          {
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 11  

 612   1              disp_24x24(33,6,Hanzi_2424_HWZS_Shang);
 613   1              disp_24x24(57,6,Hanzi_2424_HWZS_Xian);
 614   1              disp_24x24(81,6,Hanzi_2424_HWZS_Wei);
 615   1              disp_24x24(105,6,Hanzi_2424_HWZS_Xue);
 616   1              disp_24x24(129,6,Hanzi_2424_HWZS_Xi);
 617   1      //      disp_96x24(49,6,Hanzi_9624_HWZS_DJFX);
 618   1      }
 619          
 620          void Display_Page00_03_ZDKJ(void)                       //ï¿½Âµï¿½Æ¼ï¿½
 621          {
 622   1              disp_24x24(49,6,Hanzi_2424_HWZS_Zhi);
 623   1              disp_24x24(73,6,Hanzi_2424_HWZS_Dian);
 624   1              disp_24x24(97,6,Hanzi_2424_HWZS_Ke);
 625   1              disp_24x24(121,6,Hanzi_2424_HWZS_Ji1);
 626   1      //      disp_96x24(49,6,Hanzi_9624_HWZS_DJFX);
 627   1      }
 628          
 629          void Disp_Page_00_00(void)              //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 630          {
 631   1              Display_Full_Line_Up(1);
 632   1              Display_Full_Line_Up(5);
 633   1      
 634   1              Motor_Parameter.E_encoder = 00001;
 635   1              Display_Page00_00_ParaArea();   //ï¿½ï¿½Ê¾ï¿½Ì¶ï¿½ï¿½ï¿½Ï¢
 636   1              
 637   1      
 638   1              BUTTON1_Display1_FanXiang();            //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 639   1              BUTTON2_Display1_QueRen();              //ï¿½ï¿½Ê¾ï¿½ï¿½È·ï¿½Ï¡ï¿½
 640   1              Display_Full_Line_Down(12);
 641   1              Display_Full_Vertical_Line(1);
 642   1              
 643   1              Display_Page00_00_MotorDirt(); 
 644   1              
 645   1              Display_Full_Vertical_Line(192);
 646   1      }
 647          
 648          void Disp_Page_00_01(void)              //ï¿½ï¿½ï¿½ï¿½Î»Ñ§Ï°
 649          {
 650   1              Display_Full_Line_Up(1);
 651   1              Display_Full_Line_Up(5);
 652   1              
 653   1              Motor_Parameter.E_encoder = 11223;
 654   1              Motor_Parameter.I_current = 12345;
 655   1              Motor_Parameter.F_frequency = 62503;
 656   1              Display_Page00_01_ParaArea();   //ï¿½ï¿½Ê¾ï¿½Ì¶ï¿½ï¿½ï¿½Ï¢
 657   1              
 658   1              BUTTON1_Display2_Fanhui();              //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½ï¿½Ø¡ï¿½
 659   1              BUTTON2_Display1_QueRen();              //ï¿½ï¿½Ê¾ï¿½ï¿½È·ï¿½ï¿½ï¿½ï¿½
 660   1              Display_Full_Line_Down(12);
 661   1              Display_Full_Vertical_Line(1);
 662   1              Display_Full_Vertical_Line(192);
 663   1              
 664   1              Display_Page00_01_LLStudy();
 665   1              
 666   1      }
 667          
 668          void Disp_Page_00_02(void)              //ï¿½ï¿½ï¿½ï¿½Î»Ñ§Ï°
 669          {
 670   1              Display_Full_Line_Up(1);
 671   1              Display_Full_Line_Up(5);
 672   1              Motor_Parameter.E_encoder = 11223;
 673   1              Motor_Parameter.I_current = 12345;
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 12  

 674   1              Motor_Parameter.F_frequency = 25389;
 675   1              Display_Page00_01_ParaArea();   //ï¿½ï¿½Ê¾ï¿½Ì¶ï¿½ï¿½ï¿½Ï¢
 676   1              
 677   1              BUTTON1_Display2_Fanhui();              //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½ï¿½Ø¡ï¿½
 678   1              BUTTON2_Display1_QueRen();              //ï¿½ï¿½Ê¾ï¿½ï¿½È·ï¿½ï¿½ï¿½ï¿½
 679   1              Display_Full_Line_Down(12);
 680   1              Display_Full_Vertical_Line(1);
 681   1              Display_Full_Vertical_Line(192);
 682   1              
 683   1              Display_Page00_01_ULStudy();
 684   1      }
 685          
 686          void Disp_Page_00_03(void)
 687          {
 688   1              Display_Full_Line_Up(1);
 689   1              Display_Full_Line_Up(5);
 690   1              Motor_Parameter.E_encoder = 11223;
 691   1              Motor_Parameter.I_current = 12345;
 692   1              Motor_Parameter.F_frequency = 25389;
 693   1              Motor_Parameter.RT_runtime = 00002;
 694   1              
 695   1              Display_Page00_03_ParaArea();   //ï¿½ï¿½Ê¾ï¿½Ì¶ï¿½ï¿½ï¿½Ï¢
 696   1              
 697   1      //      BUTTON1_Display3_Caidan();              //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½Ëµï¿½ï¿½ï¿½
 698   1      //      BUTTON2_Display2_Fanhui();              //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½ï¿½Ø¡ï¿½
 699   1      
 700   1              BUTTON1_Display2_Fanhui();              //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½ï¿½Ø¡ï¿½
 701   1              BUTTON2_Display3_Caidan();              //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½Ëµï¿½ï¿½ï¿½
 702   1      
 703   1              Display_Full_Line_Down(12);
 704   1              Display_Full_Vertical_Line(1);
 705   1              Display_Full_Vertical_Line(192);
 706   1              Display_Page00_03_ZDKJ();
 707   1      }
 708          
 709          
 710          void Disp_Page_01_00(void)
 711          {
 712   1              Display_Full_Line_Up(1);
 713   1              Display_Full_Line_Up(5);
 714   1              
 715   1              Display_Page00_01_ParaArea();   //ï¿½ï¿½Ê¾ï¿½Ì¶ï¿½ï¿½ï¿½Ï¢
 716   1              
 717   1              BUTTON1_Display2_Fanhui();              //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½ï¿½Ø¡ï¿½
 718   1              BUTTON2_Display1_QueRen();              //ï¿½ï¿½Ê¾ï¿½ï¿½È·ï¿½ï¿½ï¿½ï¿½
 719   1              Display_Full_Line_Down(12);
 720   1              Display_Full_Vertical_Line(1);
 721   1              Display_Full_Vertical_Line(192);
 722   1              
 723   1              
 724   1              
 725   1      }
 726          
 727          void Disp_Page_01_01(void)
 728          {
 729   1              Display_Full_Line_Up(1);
 730   1              Display_Full_Line_Up(5);
 731   1              
 732   1              Display_Page00_01_ParaArea();   //ï¿½ï¿½Ê¾ï¿½Ì¶ï¿½ï¿½ï¿½Ï¢
 733   1              
 734   1              BUTTON1_Display2_Fanhui();              //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½ï¿½Ø¡ï¿½
 735   1              BUTTON2_Display1_QueRen();              //ï¿½ï¿½Ê¾ï¿½ï¿½È·ï¿½ï¿½ï¿½ï¿½
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 13  

 736   1              Display_Full_Line_Down(12);
 737   1              Display_Full_Vertical_Line(1);
 738   1              Display_Full_Vertical_Line(192);
 739   1              
 740   1      
 741   1      }
 742          
 743          void Disp_Page_01_02(void)
 744          {
 745   1              Display_Full_Line_Up(1);
 746   1              Display_Full_Line_Up(5);
 747   1              
 748   1              Display_Page00_01_ParaArea();   //ï¿½ï¿½Ê¾ï¿½Ì¶ï¿½ï¿½ï¿½Ï¢
 749   1              
 750   1              BUTTON1_Display2_Fanhui();              //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½ï¿½Ø¡ï¿½
 751   1              BUTTON2_Display1_QueRen();              //ï¿½ï¿½Ê¾ï¿½ï¿½È·ï¿½ï¿½ï¿½ï¿½
 752   1              Display_Full_Line_Down(12);
 753   1              Display_Full_Vertical_Line(1);
 754   1              Display_Full_Vertical_Line(192);
 755   1              
 756   1              
 757   1              
 758   1      }
 759          
 760          void Disp_Page_01_03(void)
 761          {
 762   1              Display_Full_Line_Up(1);
 763   1              Display_Full_Line_Up(5);
 764   1              
 765   1              Display_Page00_01_ParaArea();   //ï¿½ï¿½Ê¾ï¿½Ì¶ï¿½ï¿½ï¿½Ï¢
 766   1              
 767   1              BUTTON1_Display2_Fanhui();              //ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½ï¿½Ø¡ï¿½
 768   1              BUTTON2_Display1_QueRen();              //ï¿½ï¿½Ê¾ï¿½ï¿½È·ï¿½ï¿½ï¿½ï¿½
 769   1              Display_Full_Line_Down(12);
 770   1              Display_Full_Vertical_Line(1);
 771   1              Display_Full_Vertical_Line(192);
 772   1              
 773   1                      
 774   1      }
 775          
 776          void LCD_Diaplay_Page(uchar page, uchar level)
 777          {
 778   1              clear_screen();
 779   1              if(page == 0)
 780   1                      {
 781   2                              switch(level)
 782   2                              {
 783   3                                      case 0: Disp_Page_00_00();break;
 784   3                                      case 1: Disp_Page_00_01();break;
 785   3                                      case 2: Disp_Page_00_02();break;
 786   3                                      case 3: Disp_Page_00_03();break;
 787   3                                      default: break;
 788   3                              }
 789   2                      }
 790   1                      else
 791   1                              {;}
 792   1              if(page == 1)
 793   1                      {
 794   2                              switch(level)
 795   2                              {
 796   3                                      case 0: Disp_Page_01_00();break;
 797   3                                      case 1: Disp_Page_01_01();break;
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 14  

 798   3                                      case 2: Disp_Page_01_02();break;
 799   3                                      case 3: Disp_Page_01_03();break;
 800   3                                      default: break;
 801   3                              }
 802   2                      }
 803   1                      else
 804   1                              {;}
 805   1      }
 806          
 807          // void UartInit(void)          //9600bps@24.000MHz
 808          // {
 809          //      //UART 1
 810          //      SCON    = 0x50;         //8Î»ï¿½ï¿½ï¿½ï¿½,ï¿½É±ä²¨ï¿½ï¿½ï¿½ï¿½
 811          //      AUXR    |= 0x40;                //ï¿½ï¿½Ê±ï¿½ï¿½1Ê±ï¿½ï¿½ÎªFosc,ï¿½ï¿½1T
 812          //      AUXR    &= 0xFE;                //ï¿½ï¿½ï¿½ï¿½1Ñ¡ï¿½ï¿½Ê±ï¿½ï¿½1Îªï¿½ï¿½ï¿½ï¿½ï¿½Ê·ï¿½ï¿½ï¿½ï¿½ï¿½
 813          //      TMOD    &= 0x0F;                //ï¿½è¶¨ï¿½ï¿½Ê±ï¿½ï¿½1Îª16Î»ï¿½Ô¶ï¿½ï¿½ï¿½×°ï¿½ï¿½Ê½
 814          //      TL1             = 0x8F;         //ï¿½è¶¨ï¿½ï¿½Ê±ï¿½ï¿½"background: #ffffff"Öµ
 815          //      TH1             = 0xFD;         //ï¿½è¶¨ï¿½ï¿½Ê±ï¿½ï¿½Öµ
 816          //      ET1             = 0;            //ï¿½ï¿½Ö¹ï¿½ï¿½Ê±ï¿½ï¿½1ï¿½Ð¶ï¿½
 817          //      TR1             = 1;            //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½1
 818          //      ES              = 1;                  /*ï¿½ò¿ª´ï¿½ï¿½ï¿½ï¿½Ð¶ï¿½*/
 819                  
 820          //      //UART 2
 821          //      //reserved
 822                  
 823          //      //UART 3 Baud Rate:9600, using Timer3
 824          //      S3CON =         0x10;           //8Î»ï¿½ï¿½ï¿½ï¿½,ï¿½É±ä²¨ï¿½ï¿½ï¿½ï¿½
 825          //      S3CON |=        0x40;           //ï¿½ï¿½ï¿½ï¿½3Ñ¡ï¿½ï¿½Ê±ï¿½ï¿½3Îªï¿½ï¿½ï¿½ï¿½ï¿½Ê·ï¿½ï¿½ï¿½ï¿½ï¿½
 826          //      T4T3M &=        0xFD;           //ï¿½ï¿½Ê±ï¿½ï¿½3Ê±ï¿½ï¿½ÎªFosc/12,ï¿½ï¿½12T
 827          //      T3L     =       0xCC;           //ï¿½è¶¨ï¿½ï¿½Ê±ï¿½ï¿½Öµ
 828          //      T3H     =       0xFF;           //ï¿½è¶¨ï¿½ï¿½Ê±ï¿½ï¿½Öµ
 829          //      T4T3M |=        0x08;           //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½3
 830                  
 831          //      //UART 4                                        Baud Rate:9600, using Timer2
 832          //      S4CON =         0x10;           //8Î»ï¿½ï¿½ï¿½ï¿½,ï¿½É±ä²¨ï¿½ï¿½ï¿½ï¿½
 833          //      S4CON &=        0xBF;           //ï¿½ï¿½ï¿½ï¿½4Ñ¡ï¿½ï¿½Ê±ï¿½ï¿½2Îªï¿½ï¿½ï¿½ï¿½ï¿½Ê·ï¿½ï¿½ï¿½ï¿½ï¿½
 834          //      AUXR    &=      0xFB;           //ï¿½ï¿½Ê±ï¿½ï¿½2Ê±ï¿½ï¿½ÎªFosc/12,ï¿½ï¿½12T
 835          //      T2L     =       0xCC;           //ï¿½è¶¨ï¿½ï¿½Ê±ï¿½ï¿½Öµ
 836          //      T2H     =       0xFF;           //ï¿½è¶¨ï¿½ï¿½Ê±ï¿½ï¿½Öµ
 837          //      AUXR    |=      0x10;           //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½2
 838                          
 839          //      EA              = 1;                  /*ï¿½ï¿½ï¿½ï¿½ï¿½Ð¶ï¿½*/
 840          // }
 841          
 842          // void Timer7Init(void)                //10ï¿½ï¿½ï¿½ï¿½@24.000MHz
 843          // {
 844          // //   T4T3M &= 0xDF;          //ï¿½ï¿½Ê±ï¿½ï¿½Ê±ï¿½ï¿½12TÄ£Ê½ 0b11011111
 845          //      T4T3M &= 0x0F;          //ï¿½ï¿½Ê±ï¿½ï¿½Ê±ï¿½ï¿½12TÄ£Ê½, ï¿½ï¿½Ê±ï¿½ï¿½Ä£Ê½ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ø±ï¿½ 0b0
             -0001111
 846          //      T4L = 0xE0;             //ï¿½ï¿½ï¿½Ã¶ï¿½Ê±ï¿½ï¿½Öµ
 847          //      T4H = 0xB1;             //ï¿½ï¿½ï¿½Ã¶ï¿½Ê±ï¿½ï¿½Öµ
 848          // //   T4T3M |= 0x80;          //ï¿½ï¿½Ê±ï¿½ï¿½4ï¿½ï¿½Ê¼ï¿½ï¿½Ê±
 849          // }
 850          
 851          // void Timer10ms_Enable(void)
 852          // {
 853          //      T4T3M |= 0x80;          //ï¿½ï¿½Ê±ï¿½ï¿½4ï¿½ï¿½Ê¼ï¿½ï¿½Ê±
 854          //      IE2             |= ET4;                 //0b01000000
 855          // }
 856          
 857          // void Timer10ms_Disable(void)
 858          // {
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 15  

 859          //      T4T3M &= 0x7F;          //ï¿½ï¿½Ê±ï¿½ï¿½4Í£Ö¹ï¿½ï¿½Ê±
 860          //      IE2             &= ~ET4;                //0b10111111
 861          // }
 862          
 863          
 864          //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 865          void main()
 866          {
 867   1      
 868   1              IO_INIT();                                                                              //IOï¿½ï¿½Ê¼ï¿½ï¿½
 869   1              // UartInit();
 870   1              INIT_LCD();
 871   1              // Timer7Init();                                                                        //T4 timer initialization
 872   1              delay_ms(200);                                                          //ï¿½Ïµï¿½ï¿½ï¿½Ê±100ms
 873   1              clear_screen();
 874   1              // Timer10ms_Enable();
 875   1      //      Timer10ms_Disable();
 876   1              taskInit();
 877   1      //      LED2 = 1;
 878   1      //      disp_32x32(1,1,Hanzi_3232_XST_Xiang);
 879   1      //      disp_16x16(1,4,Hanzi_1616_XST_Ding);
 880   1      //      LCD_Diaplay_Page(0,1);
 881   1              
 882   1              Disp_Page_00_00();
 883   1              
 884   1              
 885   1              
 886   1              while(1)                                                                                        //ï¿½ï¿½Ñ­ï¿½ï¿½
 887   1              {
 888   2                      delay_ms(200);
 889   2                      uartDrvUpdate();
 890   2              }
 891   1      }
 892          
 893          // void UART_SER (void) interrupt 4 //ï¿½ï¿½ï¿½ï¿½ï¿½Ð¶Ï·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 894          // {
 895          //     unsigned char Temp, temp2;          //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½ 
 896             
 897          //    if(RI)                        //ï¿½Ð¶ï¿½ï¿½Ç½ï¿½ï¿½ï¿½ï¿½Ð¶Ï²ï¿½ï¿½ï¿½
 898          //     {
 899          //              RI=0;                      //ï¿½ï¿½Ö¾Î»ï¿½ï¿½ï¿½ï¿½
 900          //              Temp = SBUF;                 //ï¿½ï¿½ï¿½ë»ºï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Öµ
 901          
 902          //              if(Temp == 0x30)
 903          //                      {
 904          //                              LCD_Diaplay_Page(0,count);
 905          //                              count++;
 906          //                              if(count>3)
 907          //                                      {count = 0;}
 908          //                                      else {;}
 909          //                      }
 910          
 911          //              if((Temp & 0xF0) == 0x40)               //0100 0000
 912          //                      {
 913          //                temp2 = (Temp & 0x0F);
 914          //                LCD_Diaplay_Page(1,temp2);
 915          //                      }          
 916          //                      if(Temp == 0x50)
 917          //                              {
 918          //                                      Motor_Parameter.Motor_Direction = 0;
 919          //                                      Motor_Direction_Update();
 920          //                              }
C51 COMPILER V9.00   MAIN                                                                  06/15/2019 19:35:37 PAGE 16  

 921          //                      if(Temp == 0x51)
 922          //                              {
 923          //                                      Motor_Parameter.Motor_Direction = 1;
 924          //                                      Motor_Direction_Update();
 925          //                              }
 926          
 927          //       }
 928          //    if(TI)                        //ï¿½ï¿½ï¿½ï¿½Ç·ï¿½ï¿½Í±ï¿½Ö¾Î»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 929          //      TI=0;
 930          // }
 931          
 932          
 933          
 934          // void Timer4(void) interrupt 20
 935          // {
 936          //      uchar i;
 937          //      Timer4_Count++;
 938          //      T4L = 0xE0;             //ï¿½ï¿½ï¿½Ã¶ï¿½Ê±ï¿½ï¿½Öµ
 939          //      T4H = 0xB1;             //ï¿½ï¿½ï¿½Ã¶ï¿½Ê±ï¿½ï¿½Öµ
 940          //      AUXINTIF &= ~T4IF;      //clear T4IF flag
 941          //      TR0 = 1;
 942          // }
 943          
 944          // void UART3_SER (void) interrupt 17 // UART 3 interrupt function
 945          // {
 946          //     uchar Temp;                                                      //Define temporay variant 
 947             
 948          //    if(S3CON&S3RI)                            //Receive interrupt
 949          //     {
 950          //              Temp = S3BUF;                 //read in the data in S3BUF
 951          //                      S3BUF = Temp;                                                                   //send back to master for testing
 952          //       }
 953          //    if(S3CON&S3TI)                            
 954          //      S3CON &= ~S3TI;
 955          // }
 956          
 957          
 958          // void UART4_SER (void) interrupt 18 // UART 4 interrupt function
 959          // {
 960          //     uchar Temp;                                                      //Define temporay variant 
 961             
 962          //    if(S4CON&S4RI)                            //Receive interrupt
 963          //     {        
 964          //              Temp = S4BUF;                 //read in the data in S3BUF
 965          //                      S4BUF = Temp;                                                                   //send back to master for testing
 966          //       }
 967          //    if(S4CON&S4TI)                        
 968          //      S4CON &= ~S4TI;
 969          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6243    ----
   CONSTANT SIZE    =   2080    ----
   XDATA SIZE       =     51     112
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
