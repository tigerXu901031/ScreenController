C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 19296P1
OBJECT MODULE PLACED IN ..\bin\19296p1.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE ..\src\19296p1.C BROWSE DEBUG OBJECTEXTEND PRINT(.\19296p1.ls
                    -t) OBJECT(..\bin\19296p1.obj)

line level    source

   1          /* 液晶模块型号：JLX19296-380
   2          并行接口
   3          驱动IC 是:ST75256
   4          改编：Bruce Dong
   5          2019.5.15
   6          */
   7          //#include <reg52.H>
   8          //#include <intrins.h>
   9          //#include <chinese_code.h>
  10          
  11          
  12          #define uchar unsigned char
  13          #define uint unsigned int
  14          #define ulong unsigned long
  15          
  16          #define Disp_UP                         0x01
  17          #define Disp_Down                       0x02
  18          #define Disp_Left                       0x04
  19          #define Disp_Right              0x08
  20          #define Disp_Reverse    0x10
  21          
  22          
  23          
  24          
  25          sbit LCD19296_CS1 = P3^7; 
*** ERROR C202 IN LINE 25 OF ..\SRC\19296P1.C: 'P3': undefined identifier
  26          sbit LCD19296_RST = P3^6; 
*** ERROR C202 IN LINE 26 OF ..\SRC\19296P1.C: 'P3': undefined identifier
  27          sbit LCD19296_RS = P3^5; 
*** ERROR C202 IN LINE 27 OF ..\SRC\19296P1.C: 'P3': undefined identifier
  28          sbit LCD19296_RD = P3^4; 
*** ERROR C202 IN LINE 28 OF ..\SRC\19296P1.C: 'P3': undefined identifier
  29          sbit LCD19296_WR = P0^7; 
*** ERROR C202 IN LINE 29 OF ..\SRC\19296P1.C: 'P0': undefined identifier
  30          //另外P2.0~2.7 对应DB0~DB7*/
  31          //sbit key=P2^0; /*按键接口，P2.0 口与GND 之间接一个按键*/
  32          
  33          uchar code Char1608_Up[], Char1608_Down[], Char1608_Left[], Char1608_Right[];
  34          uchar code Hanzi1616_Up[], Hanzi1616_Down[], Hanzi1616_Left[], Hanzi1616_Right[];
  35          
  36          uchar code Hanzi_2424_XST_Dian[], Hanzi_2424_XST_Ji[],Hanzi_2424_XST_Fang[], Hanzi_2424_XST_Xiang[];
  37          
  38          
  39          
  40          /*延时：1 毫秒的i 倍*/
  41          void delay(int i)
  42          {
  43   1              int j,k;
  44   1              for(j=0;j<i;j++)
  45   1              for(k=0;k<110;k++);
  46   1      }
  47          /*延时：1us 的i 倍*/
  48          void delay_us(int i)
  49          {
C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 2   

  50   1              int j,k;
  51   1              for(j=0;j<i;j++)
  52   1              for(k=0;k<1;k++);
  53   1      }
  54          
  55          ///*等待一个按键，我的主板是用P2.0 与GND 之间接一个按键*/
  56          //void waitkey()
  57          //{
  58          //      repeat:
  59          //      if (key==1) goto repeat;
  60          //      else delay(2000);
  61          //}
  62          
  63          //=============transfer command to LCM===============
  64          void SEND_CMD_LCD(uchar data1)
  65          {
  66   1              LCD19296_CS1=0;
*** ERROR C202 IN LINE 66 OF ..\SRC\19296P1.C: 'LCD19296_CS1': undefined identifier
  67   1              LCD19296_RS=0;
*** ERROR C202 IN LINE 67 OF ..\SRC\19296P1.C: 'LCD19296_RS': undefined identifier
  68   1              
  69   1              LCD19296_RD=0;
*** ERROR C202 IN LINE 69 OF ..\SRC\19296P1.C: 'LCD19296_RD': undefined identifier
  70   1              delay_us(1);
  71   1              LCD19296_WR=0;
*** ERROR C202 IN LINE 71 OF ..\SRC\19296P1.C: 'LCD19296_WR': undefined identifier
  72   1              P2=data1;
*** ERROR C202 IN LINE 72 OF ..\SRC\19296P1.C: 'P2': undefined identifier
  73   1              LCD19296_RD=1;
*** ERROR C202 IN LINE 73 OF ..\SRC\19296P1.C: 'LCD19296_RD': undefined identifier
  74   1              delay_us(1);
  75   1              LCD19296_CS1=1;
*** ERROR C202 IN LINE 75 OF ..\SRC\19296P1.C: 'LCD19296_CS1': undefined identifier
  76   1              LCD19296_RD=0;
*** ERROR C202 IN LINE 76 OF ..\SRC\19296P1.C: 'LCD19296_RD': undefined identifier
  77   1      }
  78          
  79          //-----------transfer data to LCM---------------
  80          void SEND_DATA_LCD(uchar data1)
  81          {
  82   1              LCD19296_CS1=0;
*** ERROR C202 IN LINE 82 OF ..\SRC\19296P1.C: 'LCD19296_CS1': undefined identifier
  83   1              LCD19296_RS=1;
*** ERROR C202 IN LINE 83 OF ..\SRC\19296P1.C: 'LCD19296_RS': undefined identifier
  84   1              LCD19296_RD=0;
*** ERROR C202 IN LINE 84 OF ..\SRC\19296P1.C: 'LCD19296_RD': undefined identifier
  85   1              delay_us(1);
  86   1              LCD19296_WR=0;
*** ERROR C202 IN LINE 86 OF ..\SRC\19296P1.C: 'LCD19296_WR': undefined identifier
  87   1              P2=data1;
*** ERROR C202 IN LINE 87 OF ..\SRC\19296P1.C: 'P2': undefined identifier
  88   1              LCD19296_RD=1;
*** ERROR C202 IN LINE 88 OF ..\SRC\19296P1.C: 'LCD19296_RD': undefined identifier
  89   1              delay_us(1);
  90   1              LCD19296_CS1=1;
*** ERROR C202 IN LINE 90 OF ..\SRC\19296P1.C: 'LCD19296_CS1': undefined identifier
  91   1              LCD19296_RD=0;
*** ERROR C202 IN LINE 91 OF ..\SRC\19296P1.C: 'LCD19296_RD': undefined identifier
  92   1      }
  93          
  94          void INIT_LCD()
  95          {
C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 3   

  96   1              LCD19296_RST=0;
*** ERROR C202 IN LINE 96 OF ..\SRC\19296P1.C: 'LCD19296_RST': undefined identifier
  97   1              delay(100);
  98   1              LCD19296_RST=1;
*** ERROR C202 IN LINE 98 OF ..\SRC\19296P1.C: 'LCD19296_RST': undefined identifier
  99   1              delay(100);
 100   1              SEND_CMD_LCD(0x30); //EXT=0
 101   1              SEND_CMD_LCD(0x94); //Sleep out
 102   1              SEND_CMD_LCD(0x31); //EXT=1
 103   1              SEND_CMD_LCD(0xD7); //Autoread disable
 104   1              SEND_DATA_LCD(0X9F); //
 105   1              SEND_CMD_LCD(0x32); //Analog SET
 106   1              SEND_DATA_LCD(0x00); //OSC Frequency adjustment
 107   1              SEND_DATA_LCD(0x01); //Frequency on booster capacitors->6KHz
 108   1              SEND_DATA_LCD(0x03); //Bias=1/11
 109   1              SEND_CMD_LCD(0x20); // Gray Level
 110   1              SEND_DATA_LCD(0x01);
 111   1              
 112   1              SEND_DATA_LCD(0x03);
 113   1              SEND_DATA_LCD(0x05);
 114   1              SEND_DATA_LCD(0x07);
 115   1              SEND_DATA_LCD(0x09);
 116   1              SEND_DATA_LCD(0x0b);
 117   1              SEND_DATA_LCD(0x0d);
 118   1              SEND_DATA_LCD(0x10);
 119   1              SEND_DATA_LCD(0x11);
 120   1              SEND_DATA_LCD(0x13);
 121   1              SEND_DATA_LCD(0x15);
 122   1              SEND_DATA_LCD(0x17);
 123   1              SEND_DATA_LCD(0x19);
 124   1              SEND_DATA_LCD(0x1b);
 125   1              SEND_DATA_LCD(0x1d);
 126   1              SEND_DATA_LCD(0x1f);
 127   1              SEND_CMD_LCD(0x30); //EXT=0
 128   1              SEND_CMD_LCD(0x75); //Page Address setting
 129   1              
 130   1              SEND_DATA_LCD(0X00); // XS=0
 131   1              SEND_DATA_LCD(0X14); // XE=159 0x28
 132   1              SEND_CMD_LCD(0x15); //Clumn Address setting
 133   1              SEND_DATA_LCD(0X00); // XS=0
 134   1              SEND_DATA_LCD(0Xff); // XE=256
 135   1              SEND_CMD_LCD(0xBC); //Data scan direction
 136   1              SEND_DATA_LCD(0x00); //MX.MY=Normal
 137   1              SEND_DATA_LCD(0xA6);
 138   1              SEND_CMD_LCD(0xCA); //Display Control
 139   1              SEND_DATA_LCD(0X00); //
 140   1              SEND_DATA_LCD(0X9F); //Duty=160
 141   1              SEND_DATA_LCD(0X20); //Nline=off
 142   1              SEND_CMD_LCD(0xF0); //Display Mode
 143   1              SEND_DATA_LCD(0X10); //10=Monochrome Mode,11=4Gray
 144   1              
 145   1              SEND_CMD_LCD(0x81); //EV control
 146   1      //      SEND_DATA_LCD(0x3a); //VPR[5-0]
 147   1              SEND_DATA_LCD(0x30); //VPR[5-0]
 148   1              SEND_DATA_LCD(0x03); //粗调对比度
 149   1              SEND_CMD_LCD(0x20); //Power control
 150   1              SEND_DATA_LCD(0x0B); //D0=regulator ; D1=follower ; D3=booste, on:1 off:0
 151   1              delay_us(100);
 152   1              SEND_CMD_LCD(0xAF); //Display on
 153   1      }
 154          
 155          /*写LCD 行列地址：X 为起始的列地址，Y 为起始的行地址，x_total,y_total 分别为列地址及行地址的起点到终点的差
C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 4   

             -值 */
 156          void lcd_address(uchar x,uchar y,x_total,y_total)
 157          {
 158   1              x=x-1;
 159   1              y=y+7;
 160   1              SEND_CMD_LCD(0x15); //Set Column Address
 161   1              SEND_DATA_LCD(x);
 162   1              SEND_DATA_LCD(x+x_total-1);
 163   1              SEND_CMD_LCD(0x75); //Set Page Address
 164   1              SEND_DATA_LCD(y);
 165   1              SEND_DATA_LCD(y+y_total-1);
 166   1              SEND_CMD_LCD(0x30);
 167   1              SEND_CMD_LCD(0x5c);
 168   1      }
 169          
 170          /*写LCD 行列地址：X 为起始的列地址，Y 为起始的行地址，x_total,y_total 分别为列地址及行地址的起点到终点的差
             -值 */
 171          void SET_LCD_DISP_AREA(uchar Column, uchar Page, Column_Total,Page_Total)
 172          {
 173   1              Column = Column - 1;
 174   1              Page = Page + 7;
 175   1              SEND_CMD_LCD(0x15); //Set Column Address
 176   1              SEND_DATA_LCD(Column);
 177   1              Column += Column_Total;
 178   1              Column -= 1;
 179   1              SEND_DATA_LCD(Column);
 180   1              SEND_CMD_LCD(0x75); //Set Page Address
 181   1              SEND_DATA_LCD(Page);
 182   1              Page += Page_Total;
 183   1              Page -= 1;
 184   1              SEND_DATA_LCD(Page);
 185   1              SEND_CMD_LCD(0x30);
 186   1              SEND_CMD_LCD(0x5c);
 187   1      }
 188          
 189          /*清屏*/
 190          void clear_screen()
 191          {
 192   1              uchar i,j;
 193   1              lcd_address(0,0,193,13);
 194   1              for(i=0;i<13;i++)
 195   1              {
 196   2                      for(j=0;j<193;j++)
 197   2                      {
 198   3                              SEND_DATA_LCD(0x00);
 199   3                      }
 200   2              }
 201   1      }
 202          
 203          void display_8x8(uchar column, uchar page,uchar *text) 
 204          { 
 205   1        uchar i; 
 206   1        lcd_address(column,page,8,1); 
 207   1          for(i=0;i<8;i++) 
 208   1          {
 209   2              SEND_DATA_LCD(*text);
 210   2              text++; 
 211   2          } 
 212   1      }
 213          
 214          void display_8x1(uchar column, uchar page,uchar text) 
 215          { 
C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 5   

 216   1        lcd_address(column,page,1,1); 
 217   1        SEND_DATA_LCD(text);
 218   1      }
 219          
 220          //void display_16x8(uchar column, uchar page,uchar *text) 
 221          //{ 
 222          //  uchar i; 
 223          //  lcd_address(column,page,8,2); 
 224          //    for(i=0;i<16;i++) 
 225          //    {
 226          //      SEND_DATA_LCD(*text);
 227          //      text++; 
 228          //    } 
 229          //}
 230          
 231          void CHAR_Display_16x8(uchar Column, uchar Page,uchar *dp, uchar Disp_Para) 
 232          { 
 233   1        uchar i, Char1608[16], *p1, *p2;
 234   1              SET_LCD_DISP_AREA(Column, Page, 8, 2); 
 235   1              
 236   1              p1 = Char1608;
 237   1              for(i=0;i<16;i++)
 238   1                      {*(p1+i) = *(dp+i);}
 239   1              
 240   1      //判断上横
 241   1              if((Disp_Para & Disp_UP)>0)
 242   1                      {
 243   2                                      p2 = Char1608_Up;
 244   2                                      for(i=0;i<16;i++)
 245   2                                      {*(p1+i)|=*(p2+i);}
 246   2                      }
 247   1                      else
 248   1                              {;}
 249   1      
 250   1      //判断下横
 251   1              if((Disp_Para & Disp_Down)>0)
 252   1                      {
 253   2                                      p2 = Char1608_Down;
 254   2                                      for(i=0;i<16;i++)
 255   2                                      {*(p1+i)|=*(p2+i);}
 256   2                      }
 257   1                      else
 258   1                              {;}
 259   1      
 260   1      //判断左竖
 261   1              if((Disp_Para & Disp_Left)>0)
 262   1                      {
 263   2                                      p2 = Char1608_Left;
 264   2                                      for(i=0;i<16;i++)
 265   2                                      {*(p1+i)|=*(p2+i);}
 266   2                      }
 267   1                      else
 268   1                              {;}
 269   1      
 270   1      //判断右竖
 271   1              if((Disp_Para & Disp_Right)>0)
 272   1                      {
 273   2                                      p2 = Char1608_Right;
 274   2                                      for(i=0;i<16;i++)
 275   2                                      {*(p1+i)|=*(p2+i);}
 276   2                      }
 277   1                      else
C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 6   

 278   1                              {;}
 279   1      
 280   1          for(i=0;i<16;i++) 
 281   1          {
 282   2              SEND_DATA_LCD(*(p1+i));
 283   2          } 
 284   1      }
 285          
 286          ///*显示16*16 点阵的汉字或等同于16*16 点阵的图像*/
 287          //void disp_16x16(uchar x,uchar y,uchar *dp)
 288          //{
 289          //      uchar i,j;
 290          //      lcd_address(x,y,16,2);
 291          //      for(i=0;i<2;i++)
 292          //      {
 293          //              for(j=0;j<16;j++)
 294          //              {
 295          //                      SEND_DATA_LCD(*dp);
 296          //                      dp++;
 297          //              }
 298          //      }
 299          //}
 300          
 301          /*显示16*16 点阵的汉字*/
 302          /*形参说明：bit0：上横线，bit1：下横线，bit2：左竖线，bit3：右竖线，bit4：光标，bit5：反显*/
 303          /*      bit  7 6 5 4 3 2 1 0    */
 304          /*      Para x x x x x x x x    */
 305          
 306          void Hanzi_Disp_16x16(uchar Column, uchar Page, uchar *dp, uchar Disp_Para)
 307          {
 308   1              uchar i, Hanzi1616[32], *p1, *p2;
 309   1              SET_LCD_DISP_AREA(Column, Page, 16, 2);
 310   1      
 311   1              p1 = Hanzi1616;
 312   1              for(i=0;i<32;i++)
 313   1                      {*(p1+i) = *(dp+i);}
 314   1              
 315   1      //判断上横
 316   1              if((Disp_Para & Disp_UP)>0)
 317   1                      {
 318   2                                      p2 = Hanzi1616_Up;
 319   2                                      for(i=0;i<32;i++)
 320   2                                      {*(p1+i)|=*(p2+i);}
 321   2                      }
 322   1                      else
 323   1                              {;}
 324   1      
 325   1      //判断下横
 326   1              if((Disp_Para & Disp_Down)>0)
 327   1                      {
 328   2                                      p2 = Hanzi1616_Down;
 329   2                                      for(i=0;i<32;i++)
 330   2                                      {*(p1+i)|=*(p2+i);}
 331   2                      }
 332   1                      else
 333   1                              {;}
 334   1      
 335   1      //判断左竖
 336   1              if((Disp_Para & Disp_Left)>0)
 337   1                      {
 338   2                                      p2 = Hanzi1616_Left;
 339   2                                      for(i=0;i<32;i++)
C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 7   

 340   2                                      {*(p1+i)|=*(p2+i);}
 341   2                      }
 342   1                      else
 343   1                              {;}
 344   1      
 345   1      //判断右竖
 346   1              if((Disp_Para & Disp_Right)>0)
 347   1                      {
 348   2                                      p2 = Hanzi1616_Right;
 349   2                                      for(i=0;i<32;i++)
 350   2                                      {*(p1+i)|=*(p2+i);}
 351   2                      }
 352   1                      else
 353   1                              {;}
 354   1      
 355   1      //最终显示
 356   1              for(i=0;i<32;i++)
 357   1              {
 358   2                      SEND_DATA_LCD(*(p1+i));
 359   2              }
 360   1      }
 361          
 362          /*显示24*24 点阵的汉字或等同于24*24 点阵的图像*/
 363          void disp_24x24(int x,int y,uchar *dp)
 364          {
 365   1              uchar i;
 366   1              lcd_address(x,y,24,3);
 367   1              for(i=0;i<72;i++)
 368   1              {
 369   2                      SEND_DATA_LCD(*(dp+i));
 370   2              }
 371   1      }
 372          
 373          /////*显示32*32 点阵的汉字或等同于32*32 点阵的图像*/
 374          ////void disp_32x32(int x,int y,uchar *dp)
 375          ////{
 376          ////    uchar i,j;
 377          ////    lcd_address(x,y,32,4);
 378          ////    for(i=0;i<4;i++)
 379          ////    {
 380          ////            for(j=0;j<32;j++)
 381          ////            {
 382          ////                    SEND_DATA_LCD(*dp);
 383          ////                    dp++;
 384          ////            }
 385          ////    }
 386          ////}
 387          ////
 388          /////*显示48*48 点阵的汉字或图像*/
 389          ////void disp_48x48(uchar x,uchar y,char *dp)
 390          ////{
 391          ////    uchar i,j;
 392          ////    lcd_address(x,y,48,6);
 393          ////    for(i=0;i<6;i++)
 394          ////    {
 395          ////            for(j=0;j<48;j++)
 396          ////            {
 397          ////                    SEND_DATA_LCD(*dp);
 398          ////                    dp++;
 399          ////            }
 400          ////    }
 401          ////}
C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 8   

 402          ////
 403          /////*显示64*48 点阵的汉字或图像*/
 404          ////void disp_64x48(uchar x,uchar y,char *dp)
 405          ////{
 406          ////    uchar i,j;
 407          ////    lcd_address(x,y,55,6);
 408          ////    for(i=0;i<6;i++)
 409          ////    {
 410          ////            for(j=0;j<55;j++)
 411          ////            {
 412          ////                    SEND_DATA_LCD(*dp);
 413          ////                    dp++;
 414          ////            }
 415          ////    }
 416          ////}
 417          ////
 418          /////*显示96*24 点阵的图像*/
 419          ////void disp_96x24(uchar x,uchar y,char *dp)
 420          ////{
 421          ////    uchar i,j; 
 422          ////    lcd_address(x,y,96,3);
 423          ////    for(i=0;i<3;i++)
 424          ////    {
 425          ////            for(j=0;j<96;j++)
 426          ////            {
 427          ////                    SEND_DATA_LCD(*dp);
 428          ////                    dp++;
 429          ////            }
 430          ////    }
 431          ////}
 432          ////
 433          /////*显示196*96 点阵的图像*/
 434          ////void disp_192x96(uchar x,uchar y,char *dp)
 435          ////{
 436          ////    uchar i,j; 
 437          ////    lcd_address(x,y,192,12);
 438          ////    for(i=0;i<12;i++)
 439          ////    {
 440          ////            for(j=0;j<192;j++)
 441          ////            {
 442          ////                    SEND_DATA_LCD(*dp);
 443          ////                    dp++;
 444          ////            }
 445          ////    }
 446          ////}
 447          
 448          
 449          //特殊符号（取字模方式：阴码，列行式，顺向
 450          
 451          uchar code Char0808_Up[]={0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80};/*"上横"*/
 452          
 453          uchar code Char0808_Down[]={0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01};/*"下横"*/
 454          
 455          uchar code Char0808_Left[]={0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"左竖"*/
 456          
 457          uchar code Char0808_Right[]={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF};/*"右竖"*/
 458          
 459          uchar code Char0808_UpDown[]={0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81};/*"上横+下横"*/
 460          
 461          uchar code Char1608_Up[]={
 462          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"上横"*/
 463          
C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 9   

 464          uchar code Char1608_Down[]={
 465          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01};/*"下横"*/
 466          
 467          uchar code Char1608_Left[]={
 468          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"左竖"*/
 469          
 470          uchar code Char1608_Right[]={
 471          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF};/*"右竖"*/
 472          
 473          uchar code Hanzi1616_Up[]={
 474          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 475          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"上横"*/
 476          
 477          uchar code Hanzi1616_Down[]={
 478          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 479          0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01};/*"下横"*/
 480          
 481          uchar code Hanzi1616_Left[]={
 482          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 483          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"左竖"*/
 484          
 485          uchar code Hanzi1616_Right[]={
 486          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
 487          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF};/*"右竖"*/
 488          
 489          
 490          //汉字取模设置：阴码，列行式，顺向
 491          uchar code Hanzi_1616_ST_Dian[]={
 492          0x00,0x00,0x1F,0x11,0x11,0x11,0x11,0xFF,0x11,0x11,0x11,0x11,0x1F,0x00,0x00,0x00,
 493          0x00,0x00,0xF8,0x10,0x10,0x10,0x10,0xFE,0x11,0x11,0x11,0x11,0xF9,0x01,0x0F,0x00};/*"电",0*/
 494          
 495          uchar code Hanzi_1616_ST_Ji[]={
 496          0x08,0x08,0x0B,0xFF,0x09,0x08,0x00,0x7F,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,0x00,
 497          0x20,0xC0,0x00,0xFF,0x00,0xC1,0x06,0xF8,0x00,0x00,0x00,0xFC,0x02,0x02,0x1E,0x00};/*"机",1*/
 498          
 499          
 500          uchar code Hanzi_1616_HWXH_Dian[]={
 501          0x00,0x00,0x0F,0x09,0x09,0x09,0x09,0x3F,0x09,0x09,0x09,0x09,0x09,0x0F,0x00,0x00,
 502          0x00,0x00,0xF0,0x20,0x20,0x20,0x20,0xFE,0x22,0x22,0x22,0x22,0x22,0xF2,0x0C,0x00};/*"电",0*/
 503          
 504          uchar code Hanzi_1616_HWXH_Ji[]={
 505          0x00,0x04,0x04,0x05,0x3F,0x05,0x04,0x04,0x1F,0x10,0x10,0x10,0x1F,0x00,0x00,0x00,
 506          0x00,0x30,0x60,0x80,0xFE,0x02,0xC2,0x4C,0xF0,0x00,0x00,0x00,0xFE,0x02,0x06,0x04};/*"机",1*/
 507          
 508          uchar code Hanzi_1616_XST_Fan[]={
 509          0x00,0x02,0x02,0x42,0x33,0x00,0x00,0x3F,0x24,0x25,0x24,0x44,0x44,0xC5,0x46,0x00,
 510          0x00,0x00,0x02,0x04,0xF8,0x04,0x1A,0xE2,0x0A,0x12,0xA2,0x42,0xA2,0x12,0x0A,0x02};/*"返",0*/
 511          
 512          uchar code Hanzi_1616_XST_Hui[]={
 513          0x00,0x00,0x00,0x7F,0x40,0x40,0x4F,0x48,0x48,0x48,0x4F,0x40,0x40,0x7F,0x00,0x00,
 514          0x00,0x00,0x00,0xFE,0x04,0x04,0xE4,0x24,0x24,0x24,0xE4,0x04,0x04,0xFE,0x00,0x00};/*"回",0*/
 515          
 516          uchar code Hanzi_1616_XST_Que[]={
 517          0x20,0x21,0x27,0x3A,0x22,0x23,0x04,0x08,0x17,0xE4,0x24,0x27,0x2C,0x34,0x07,0x00,
 518          0x40,0x80,0xFE,0x08,0x08,0xFC,0x01,0x06,0xF8,0x90,0x90,0xFC,0x92,0x91,0xFE,0x00};/*"确",0*/
 519          
 520          uchar code Hanzi_1616_XST_Ding[]={
 521          0x08,0x30,0x22,0x22,0x22,0x22,0xA2,0x63,0x22,0x22,0x22,0x22,0x22,0x28,0x30,0x00,
 522          0x01,0x02,0x04,0x78,0x04,0x02,0x02,0xFE,0x22,0x22,0x22,0x22,0x22,0x02,0x02,0x00};/*"定",0*/
 523          
 524          uchar code Hanzi_1616_XST_Ren[]={
 525          0x02,0x02,0x42,0x33,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 10  

 526          0x00,0x00,0x00,0xFC,0x09,0x12,0x04,0x18,0xE0,0x00,0xE0,0x18,0x04,0x02,0x01,0x00};/*"认",0*/
 527          
 528          uchar code Hanzi_1616_XST_Fan1[]={
 529          0x00,0x00,0x00,0x3F,0x24,0x24,0x27,0x24,0x24,0x44,0x44,0x44,0xC5,0x46,0x00,0x00,
 530          0x00,0x02,0x0C,0xF1,0x01,0x02,0x02,0xC4,0x28,0x10,0x28,0x44,0x82,0x02,0x01,0x01};/*"反",0*/
 531          
 532          uchar code Hanzi_1616_XST_Zheng[]={
 533          0x00,0x00,0x40,0x40,0x43,0x40,0x40,0x40,0x7F,0x41,0x41,0x41,0x41,0x41,0x40,0x00,
 534          0x00,0x02,0x02,0x02,0xFE,0x02,0x02,0x02,0xFE,0x02,0x02,0x02,0x02,0x02,0x02,0x02};/*"正",0*/
 535          
 536          uchar code Hanzi_1616_XST_Xiang[]={
 537          0x00,0x1F,0x10,0x10,0x30,0x53,0x92,0x12,0x12,0x13,0x10,0x10,0x10,0x1F,0x00,0x00,
 538          0x00,0xFF,0x00,0x00,0x00,0xF8,0x10,0x10,0x10,0xF8,0x00,0x02,0x01,0xFE,0x00,0x00};/*"向",0*/
 539          
 540          uchar code Hanzi_1616_XST_Bian[]={
 541          0x00,0x04,0x0C,0x35,0xC6,0x0C,0x00,0x3F,0x24,0xA4,0x64,0x24,0x24,0x24,0x3C,0x00,
 542          0x00,0x44,0xE6,0x44,0x48,0x4A,0x1C,0xE0,0xFF,0x90,0xFE,0x90,0xFC,0x91,0xFF,0x00};/*"编",0*/
 543          
 544          uchar code Hanzi_1616_XST_Ma[]={
 545          0x20,0x21,0x27,0x3A,0x22,0x23,0x00,0x40,0x4F,0x41,0x41,0x41,0x7F,0x01,0x01,0x00,
 546          0x40,0x80,0xFE,0x08,0x08,0xFC,0x00,0x10,0x10,0x10,0x10,0x12,0x11,0x02,0xFC,0x00};/*"码",0*/
 547          
 548          uchar code Hanzi_1616_XST_Qi[]={
 549          0x01,0x01,0x79,0x49,0x49,0x49,0x79,0x07,0x01,0x79,0x4D,0x4B,0x49,0x79,0x01,0x00,
 550          0x10,0x10,0x2F,0x29,0x49,0x49,0x8F,0x00,0x80,0x4F,0x49,0x29,0x29,0x1F,0x10,0x00};/*"器",0*/
 551          
 552          uchar code char_cMaohao[]={
 553          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xD8,0xD8,0x00,0x00,0x00,0x00};/*":",0*/
 554          
 555          uchar code char_cA[]={
 556          0x00,0x07,0x0F,0x18,0x18,0x0F,0x07,0x00,0x00,0xF0,0xF0,0x80,0x80,0xF0,0xF0,0x00};/*"A",0*/
 557          
 558          uchar code char_cB[]={
 559          0x00,0x1F,0x1F,0x11,0x11,0x1F,0x0E,0x00,0x00,0xF0,0xF0,0x10,0x10,0xF0,0xE0,0x00};/*"B",1*/
 560          
 561          
 562          
 563          uchar code Hanzi_2424_HWZS_Dian[]={
 564          0x00,0x00,0x00,0x00,0x03,0x03,0x01,0x01,0x01,0x01,0x01,0x1F,0x1F,0x01,0x01,0x01,0x01,0x03,
 565          0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x11,0x11,0x11,0x11,0x11,0xFF,
 566          0xFF,0x11,0x11,0x11,0x11,0xFF,0xFF,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,
 567          0x00,0x00,0x00,0x00,0x00,0xF8,0xFC,0x0C,0x0C,0x0C,0x0C,0x8C,0x8C,0x0C,0x1C,0xFC,0x18,0x00};/*"电",0*/
 568          
 569          uchar code Hanzi_2424_HWZS_Ji[]={
 570          0x00,0x00,0x00,0x00,0x00,0x1F,0x0F,0x00,0x01,0x01,0x01,0x00,0x0F,0x0F,0x04,0x04,0x04,0x0F,
 571          0x0F,0x04,0x00,0x00,0x00,0x00,0x00,0x80,0x83,0x8E,0xFC,0xFF,0xFF,0x90,0x88,0x8E,0x8C,0x00,
 572          0xFF,0xFF,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x03,0x00,0x40,0x80,0x00,0x00,0x00,0xFC,
 573          0xFC,0x00,0x04,0x08,0x10,0x60,0xC0,0x00,0x00,0x00,0x00,0xF8,0xF8,0x18,0x18,0x38,0xF8,0x10};/*"机",0*/
 574          
 575          uchar code Hanzi_2424_HWZS_Fang[]={
 576          0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x11,0x19,0x1D,0x0F,0x01,0x01,0x01,0x01,0x01,
 577          0x01,0x03,0x07,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xFC,
 578          0x90,0x10,0x10,0x10,0x10,0x3F,0x3F,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x08,
 579          0x18,0x30,0xE0,0xC0,0x80,0x10,0x10,0x08,0x0C,0x0C,0x3C,0xF8,0xE0,0x00,0x00,0x00,0x00,0x00};/*"方",0*/
 580          
 581          uchar code Hanzi_2424_HWZS_Xiang[]={
 582          0x00,0x00,0x00,0x03,0x01,0x01,0x01,0x01,0x07,0x1D,0x19,0x11,0x01,0x01,0x01,0x01,0x01,0x01,
 583          0x01,0x03,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x7F,0x3F,0x21,0x21,0x21,
 584          0x21,0x7F,0x3F,0x20,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0xFC,0x00,
 585          0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x08,0x08,0x0C,0xFC,0xF8,0x00,0x00,0x00};/*"向",0*/
 586          
 587          uchar code Hanzi_2424_HWZS_Xia[]={
C51 COMPILER V9.00   19296P1                                                               06/06/2019 08:04:34 PAGE 11  

 588          0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x07,0x04,0x04,0x04,0x04,0x04,0x04,
 589          0x04,0x0C,0x0C,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,
 590          0x20,0x20,0x10,0x18,0x1C,0x0E,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 591          0x00,0x00,0x00,0x00,0xFC,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"下",0*/
 592          
 593          uchar code Hanzi_2424_HWZS_Xian[]={
 594          0x00,0x00,0x00,0x0F,0x0F,0x08,0x08,0x0B,0x0E,0x0C,0x04,0x0F,0x0F,0x08,0x08,0x08,0x08,0x08,
 595          0x08,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x01,0xE1,0xB1,0x1F,0x0F,0x00,0xFF,
 596          0xFF,0x90,0x90,0x9E,0x93,0x90,0x91,0xFB,0xF6,0x06,0x00,0x00,0x00,0x00,0x00,0xFC,0xFC,0x00,
 597          0x80,0x80,0x80,0x00,0x08,0xFC,0xF8,0x18,0x10,0x20,0xA0,0xC0,0x60,0x30,0x38,0x18,0x10,0x00};/*"限",0*/
 598          
 599          uchar code Hanzi_2424_HWZS_Wei[]={
 600          0x00,0x00,0x00,0x00,0x00,0x01,0x07,0x1E,0x0C,0x08,0x00,0x00,0x00,0x10,0x18,0x0E,0x06,0x00,
 601          0x00,0x00,0x01,0x01,0x00,0x00,0x00,0x04,0x08,0x10,0x60,0xFF,0x7F,0x40,0x00,0x80,0xB0,0x9E,
 602          0x87,0x81,0x80,0x80,0x80,0x9F,0xFE,0xF0,0xA0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,
 603          0xFC,0x08,0x08,0x08,0x08,0x08,0xC8,0xC8,0x08,0x08,0xF8,0x88,0x08,0x08,0x18,0x38,0x18,0x08};/*"位",0*/
 604          
 605          uchar code Hanzi_2424_HWZS_Xue[]={
 606          0x00,0x00,0x00,0x00,0x00,0x08,0x0E,0x07,0x03,0x00,0x10,0x0C,0x0F,0x07,0x00,0x00,0x03,0x1E,
 607          0x0C,0x08,0x00,0x00,0x00,0x00,0x00,0x08,0x19,0x39,0xF1,0x41,0x51,0x51,0x51,0x51,0x51,0x51,
 608          0x57,0x53,0x55,0xD9,0x59,0x71,0x59,0x51,0xE3,0xE7,0x63,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
 609          0x00,0x00,0x00,0x08,0x08,0x0C,0xFC,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"学",0*/
 610          
 611          uchar code Hanzi_2424_HWZS_Xi[]={
 612          0x00,0x00,0x00,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,
 613          0x0F,0x0F,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x81,0x83,0xC3,0xF3,0x72,
 614          0x26,0x04,0x04,0x04,0x08,0x08,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,
 615          0x80,0x80,0x00,0x00,0x00,0x00,0x10,0x10,0x10,0x18,0x1C,0x38,0xF8,0xF0,0x00,0x00,0x00,0x00};/*"习",0*/
 616          
 617          uchar code Hanzi_2424_HWZS_Shang[]={
 618          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x0F,0x0F,0x08,0x00,0x00,0x00,0x00,
 619          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,
 620          0xFF,0x20,0x20,0x20,0x20,0x20,0x60,0xE0,0x60,0x20,0x00,0x00,0x00,0x08,0x08,0x08,0x08,0x08,
 621          0x08,0x08,0x08,0x08,0xF8,0xF8,0xF8,0x08,0x08,0x08,0x08,0x08,0x08,0x18,0x38,0x18,0x08,0x00};/*"上",0*/
 622          
 623          uchar code Hanzi_2424_HWZS_Zhi[]={
 624          0x00,0x04,0x04,0x04,0x04,0x05,0x07,0x06,0x04,0x04,0x0C,0x1C,0x0C,0x04,0x03,0x1F,0x1C,0x08,
 625          0x00,0x00,0x00,0x03,0x01,0x00,0x00,0x22,0x32,0x72,0xF2,0xA2,0x3F,0x3F,0xA2,0xE2,0x66,0x76,
 626          0x0A,0x70,0xFC,0x87,0x81,0x8F,0xFF,0xF8,0xC0,0x80,0x80,0x80,0x00,0x10,0x18,0x18,0x18,0x10,
 627          0xF0,0xF0,0x20,0x24,0x24,0x28,0x08,0x10,0x30,0xE0,0xE0,0xF0,0x38,0x38,0x1C,0x08,0x08,0x08};/*"致",0*/
 628          
 629          uchar code Hanzi_2424_HWZS_Ke[]={
 630          0x00,0x00,0x02,0x04,0x04,0x04,0x07,0x0F,0x0C,0x18,0x08,0x00,0x00,0x03,0x03,0x01,0x00,0x1F,
 631          0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x43,0x4E,0x7C,0xFF,0xFF,0x50,0xC8,0xCE,0xC4,
 632          0x20,0x19,0x9D,0x81,0x01,0xFF,0xFF,0x02,0x06,0x06,0x06,0x00,0x00,0x40,0x80,0x00,0x00,0x00,
 633          0xFC,0xFC,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0xFC,0xFC,0x00,0x00,0x00,0x00,0x00};/*"科",0*/
 634          
 635          uchar code Hanzi_2424_HWZS_Ji1[]={
 636          0x00,0x00,0x00,0x00,0x00,0x1F,0x0F,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x1F,0x1F,0x01,0x01,
 637          0x01,0x03,0x03,0x03,0x00,0x00,0x00,0x84,0x86,0x86,0x8C,0xFF,0xFF,0x98,0x90,0x90,0xB0,0x18,
 638          0x17,0x11,0xF0,0xF0,0x11,0x17,0x3E,0x38,0x10,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x0C,0xFC,
 639          0xF8,0x00,0x04,0x04,0x08,0x08,0x10,0xF0,0xE0,0xE0,0xB0,0x38,0x18,0x1C,0x1C,0x08,0x00,0x00};/*"技",0*/

C51 COMPILATION COMPLETE.  0 WARNING(S),  23 ERROR(S)
